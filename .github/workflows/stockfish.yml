name: Crystal
on:
  push:
    tags:
      - "*"
    branches:
      - crystal
  pull_request:
    branches:
      - crystal
jobs:
  Matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      arm_matrix: ${{ steps.set-arm-matrix.outputs.arm_matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - id: set-matrix
        run: |
          TASKS=$(echo $(cat .github/ci/matrix.json) )
          echo "MATRIX=$TASKS" >> $GITHUB_OUTPUT
      - id: set-arm-matrix
        run: |
          TASKS_ARM=$(echo $(cat .github/ci/arm_matrix.json) )
          echo "ARM_MATRIX=$TASKS_ARM" >> $GITHUB_OUTPUT
  Compilation:
    needs: [Matrix]
    uses: ./.github/workflows/compilation.yml
    with:
      matrix: ${{ needs.Matrix.outputs.matrix }}
  ARMCompilation:
    needs: [Matrix]
    uses: ./.github/workflows/arm_compilation.yml
    with:
      matrix: ${{ needs.Matrix.outputs.arm_matrix }}
  IWYU:
    uses: ./.github/workflows/iwyu.yml
  Sanitizers:
    uses: ./.github/workflows/sanitizers.yml
  Tests:
    uses: ./.github/workflows/tests.yml
  Matetrack:
    uses: ./.github/workflows/matetrack.yml
  Games:
    uses: ./.github/workflows/games.yml
  Binaries:
    if: (startsWith(github.ref_name, 'v') && github.ref_type == 'tag')
    needs: [Matrix, Prerelease, Compilation]
    uses: ./.github/workflows/upload_binaries.yml
    with:
      matrix: ${{ needs.Matrix.outputs.matrix }}
    permissions:
      contents: write # For deleting/creating a (pre)release
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
  ARM_Binaries:
    if: (startsWith(github.ref_name, 'v') && github.ref_type == 'tag')
    needs: [Matrix, Prerelease, ARMCompilation]
    uses: ./.github/workflows/upload_binaries.yml
    with:
      matrix: ${{ needs.Matrix.outputs.arm_matrix }}
    permissions:
      contents: write # For deleting/creating a (pre)release
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
